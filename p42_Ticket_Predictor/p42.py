"""
Resources: No Resources Used
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

'''
two inputs:
    df: a DataFrame that including the columns specified in cols.
    col: a list of names of columns in the DataFrameIt has a default value of ['Registration', 'Color', 'State'].

Returns the DataFrame with an additional indicator columns generated by get_dummies for specified columns. 
The drop_first flag is set to True to drop extraneous columns.
'''
def addIndicators(df,cols=['Registration', 'Color', 'State']):
    return pd.get_dummies(df, columns=cols, drop_first=True)


'''
five inputs and returns a linear regression classifier:
    df: a DataFrame that includes the specified columns.
    xes: the columns that are the independent variables for the model.
    y_col: a column name containing the dependent variable (what's being predicted) in the model
        default value is NumTickets.
    test_size: the size of the test set created when the data is divided into test and training sets with train_test_split
        default value is 0.25.
    random_state: the random seed used when the data is divided into test and training sets with train_test_split
        default value is 17.

returns a linear regression classifier
    the (score) of the model computed on the test data and the classifier.
'''
def build_clf(df, xes, y_col = "NumTickets", test_size = 0.25, random_state=17):
    X_train, X_test, y_train, y_test = train_test_split(df[xes], df[y_col], test_size = test_size, random_state = random_state)

    clf = LinearRegression()
    clf.fit(X_train, y_train)
    temp = clf.score(X_test, y_test)

    return temp, clf